/*
 * Copyright Soramitsu Co., Ltd. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */

buildscript {
    ext.kotlin_version = '1.3.10'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'

dependencies {
    compile project(':dapp-interface')

    // Notary
    compile('com.github.d3ledger.notary:notary-commons:7bc1c156b5')
    // Kotlin
    compile('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
    compile('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1')
    // Groovy
    compile('org.codehaus.groovy:groovy:3.0.0-alpha-4')
    // Spring
    compile('org.springframework:spring-context:5.1.4.RELEASE')
    // RMQ
    compile('com.rabbitmq:amqp-client:5.6.0')
    // Logging
    compile('org.slf4j:slf4j-log4j12:1.8.0-beta2')

    // unit tests
    testCompile('org.junit.jupiter:junit-jupiter-api:5.4.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.0')
    // Test containers iroha
    testCompile('com.github.hyperledger.iroha-java:testcontainers:5.1.1')
    // Spring
    testCompile('org.springframework:spring-test:5.1.4.RELEASE')
    // Workaround for test
    testCompile('com.google.protobuf:protobuf-java-util:3.5.1')
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task runDapp(type: JavaExec) {
    main = 'jp.co.soramitsu.dapp.DappMain'
    classpath = sourceSets.main.runtimeClasspath
    setWorkingDir("$rootDir/")
}
